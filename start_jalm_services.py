#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ JALM Full Stack
"""

import subprocess
import time
import sys
import os
from pathlib import Path

def start_service(service_name: str, port: int, command: str):
    """–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞"""
    print(f"üöÄ –ó–∞–ø—É—Å–∫ {service_name} –Ω–∞ –ø–æ—Ä—Ç—É {port}...")
    
    try:
        # –ó–∞–ø—É—Å–∫ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
        process = subprocess.Popen(
            command,
            shell=True,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True
        )
        
        # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∑–∞–ø—É—Å–∫–∞
        time.sleep(3)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω
        if process.poll() is None:
            print(f"‚úÖ {service_name} –∑–∞–ø—É—â–µ–Ω (PID: {process.pid})")
            return process
        else:
            stdout, stderr = process.communicate()
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ {service_name}:")
            print(f"   stdout: {stdout}")
            print(f"   stderr: {stderr}")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ {service_name}: {e}")
        return None

def check_service_health(service_name: str, port: int):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞"""
    import requests
    
    try:
        response = requests.get(f"http://localhost:{port}/health", timeout=5)
        if response.status_code == 200:
            print(f"‚úÖ {service_name} –∑–¥–æ—Ä–æ–≤")
            return True
        else:
            print(f"‚ö†Ô∏è {service_name} –æ—Ç–≤–µ—á–∞–µ—Ç, –Ω–æ —Å—Ç–∞—Ç—É—Å {response.status_code}")
            return False
    except requests.exceptions.RequestException:
        print(f"‚ùå {service_name} –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üéØ –ó–∞–ø—É—Å–∫ JALM Full Stack —Å–µ—Ä–≤–∏—Å–æ–≤")
    print("=" * 50)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã –∑–∞–ø—É—Å–∫–∞
    services = [
        {
            "name": "Core Runner",
            "port": 8000,
            "command": "cd core-runner && python api/main.py"
        },
        {
            "name": "Tula Spec", 
            "port": 8001,
            "command": "cd tula_spec && python api/main.py"
        },
        {
            "name": "Shablon Spec",
            "port": 8002, 
            "command": "cd shablon_spec && python api/main.py"
        }
    ]
    
    processes = []
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
    for service in services:
        process = start_service(service["name"], service["port"], service["command"])
        if process:
            processes.append((service["name"], process))
        else:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å {service['name']}")
            return False
    
    print(f"\n‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...")
    time.sleep(5)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
    print(f"\nüè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤:")
    all_healthy = True
    
    for service in services:
        if not check_service_health(service["name"], service["port"]):
            all_healthy = False
    
    if all_healthy:
        print(f"\nüéâ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã JALM Full Stack –∑–∞–ø—É—â–µ–Ω—ã –∏ —Ä–∞–±–æ—Ç–∞—é—Ç!")
        print(f"üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:")
        print(f"   Core Runner: http://localhost:8000")
        print(f"   Tula Spec:   http://localhost:8001")
        print(f"   Shablon Spec: http://localhost:8002")
        print(f"\nüß™ –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python test_jalm_full_stack.py")
        print(f"‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        
        try:
            # –î–µ—Ä–∂–∏–º —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω–Ω—ã–º–∏
            while True:
                time.sleep(1)
        except KeyboardInterrupt:
            print(f"\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...")
            
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
            for service_name, process in processes:
                print(f"   –û—Å—Ç–∞–Ω–æ–≤–∫–∞ {service_name}...")
                process.terminate()
                process.wait()
                print(f"   ‚úÖ {service_name} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            
            print(f"üéØ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    else:
        print(f"\n‚ùå –ù–µ –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–¥–æ—Ä–æ–≤—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ.")
        return False

if __name__ == "__main__":
    main() 