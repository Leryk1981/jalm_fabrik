#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Ç–µ—Å—Ç API —Ñ—É–Ω–∫—Ü–∏–π Tula Spec
"""

import requests
import json

def test_function_api():
    """–¢–µ—Å—Ç API —Ñ—É–Ω–∫—Ü–∏–π"""
    print("üîç –û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Ç–µ—Å—Ç API —Ñ—É–Ω–∫—Ü–∏–π Tula Spec")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π
    print("1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π...")
    response = requests.get("http://localhost:8001/functions")
    print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
    if response.status_code == 200:
        functions = response.json()
        print(f"   –§—É–Ω–∫—Ü–∏–π: {len(functions)}")
        for func in functions:
            print(f"   - {func['id']}: {func['description']}")
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö slot_validator
    print("\n2. –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ slot_validator...")
    response = requests.get("http://localhost:8001/functions/slot_validator")
    print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
    if response.status_code == 200:
        metadata = response.json()
        print(f"   –í—Ö–æ–¥–Ω–∞—è —Å—Ö–µ–º–∞: {metadata['input_schema']}")
    
    # –¢–µ—Å—Ç 3: –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ slot_validator
    print("\n3. –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ slot_validator...")
    test_data = {
        "params": {
            "slot": {
                "datetime": "2024-06-15T10:00:00Z",
                "duration": 60,
                "service_id": "123e4567-e89b-12d3-a456-426614174000"
            }
        }
    }
    
    print(f"   –û—Ç–ø—Ä–∞–≤–ª—è–µ–º: {json.dumps(test_data, indent=2)}")
    response = requests.post(
        "http://localhost:8001/functions/slot_validator/execute",
        json=test_data,
        headers={"Content-Type": "application/json"}
    )
    print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
    print(f"   –û—Ç–≤–µ—Ç: {response.text}")
    
    if response.status_code != 200:
        print(f"   –û—à–∏–±–∫–∞: {response.json() if response.text else '–ù–µ—Ç –¥–µ—Ç–∞–ª–µ–π'}")

if __name__ == "__main__":
    test_function_api() 